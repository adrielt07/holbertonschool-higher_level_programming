0-add_integer Module
====================
Returns sum of two integers or floats

Import Module:

      >>> add_integer = __import__('0-add_integer').add_integer

Usage:

      >>> print(add_integer(1, 2))
      3

      >>> print(add_integer(100, -2))
      98

      >>> print(add_integer(2))
      100

      >>> print(add_integer(100.3, -2))
      98

Checks for Documentation:

      >>> print(len(__import__("0-add_integer").__doc__) > 0)
      True

      >>> print(len(__import__("0-add_integer").add_integer.__doc__) > 0)
      True

If Errors:

      >>> print(add_integer(4, "School")) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: b must ... integer

      >>> print(add_integer(None)) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: a must ... integer

      >>> print(add_integer(None)) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: a must ... integer

      >>> print(add_integer(3, float('inf'))) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      OverflowError: cannot convert float ... integer

      >>> print(add_integer()) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: add_integer() ... 'a'

      >>> print(add_integer(3, float('NaN'))) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      ValueError: cannot convert float ... integer
