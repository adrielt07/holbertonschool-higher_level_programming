2-matrix_divided Module
====================
Divides all elements of a matrix and add the quotient to a new list
Returns a new list

Import Module:

      >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Usage:
      >>> matrix = [[1, 2, 3,], [4, 5, 6]]
      >>> print(matrix_divided(matrix, 3))
      [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

      >>> print(matrix)
      [[1, 2, 3], [4, 5, 6]]


      >>> print(matrix_divided(matrix, float('inf')))
      [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Checks for Documentation:

      >>> print(len(__import__("2-matrix_divided").__doc__) > 0)
      True

      >>> print(len(__import__("2-matrix_divided").matrix_divided.__doc__) > 0)
      True

If Errors:

      >>> print(matrix_divided([['abc', 2, 3,], [1, 2, 3]], 1))
      ... # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: matrix ... integers/floats

      >>> print(matrix_divided([[1, 2], [1]], 3)) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: ... matrix ... same size

      >>> print(matrix_divided(matrix, 0)) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      ZeroDivisionError: division by zero

      >>> print(matrix_divided(matrix, "a")) # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: div must be a number

      >>> print(matrix_divided())
      ... # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: matrix_divided() missing ... 'matrix' and 'div'

      >>> print(matrix_divided([12],))
      ... # doctest: +ELLIPSIS
      Traceback (most recent call last):
      TypeError: matrix_divided() missing ... 'div'
